name: 构建和发布


on:
  workflow_dispatch:  # 手动触发工作流
    inputs:
      upload_to_repo:
        description: '上传二进制文件到项目仓库'
        type: boolean
        default: false
      create_release:
        description: '创建发布版本'
        type: boolean
        default: true

jobs:
  validate_inputs:
    runs-on: ubuntu-latest
    steps:
      - name: 验证输入
        run: echo "验证输入完成"
    outputs:
      should_upload_to_repo: ${{ github.event.inputs.upload_to_repo == 'true' }}
      should_create_release: ${{ github.event.inputs.create_release == 'true' }}

  cleanup_releases:
    name: 清理旧版本发布
    needs: validate_inputs
    if: ${{ needs.validate_inputs.outputs.should_create_release == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: 删除旧版本
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const releases = await github.rest.repos.listReleases({
              owner,
              repo
            });
            
            for (const release of releases.data) {
              await github.rest.repos.deleteRelease({
                owner,
                repo,
                release_id: release.id
              });
              
              if (release.tag_name) {
                try {
                  await github.rest.git.deleteRef({
                    owner,
                    repo,
                    ref: `tags/${release.tag_name}`
                  });
                } catch (e) {
                  console.log(`Failed to delete tag ${release.tag_name}: ${e}`);
                }
              }
            }

  build:
    needs: [validate_inputs]
    runs-on: ${{ matrix.os }} # 定义作业运行的操作系统
    strategy:
      matrix:
        include:
          # Linux x86_64
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: ubuntu-latest-CloudflareST-Rust
            asset_name: CloudflareST-Rust-linux-x86_64
            binary_path: target/x86_64-unknown-linux-gnu/release/CloudflareST-Rust
            
          # Linux aarch64
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            artifact_name: ubuntu-latest-CloudflareST-Rust-aarch64
            asset_name: CloudflareST-Rust-linux-aarch64
            binary_path: target/aarch64-unknown-linux-gnu/release/CloudflareST-Rust
            
          # macOS x86_64
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: macos-latest-CloudflareST-Rust
            asset_name: CloudflareST-Rust-macos-x86_64
            binary_path: target/x86_64-apple-darwin/release/CloudflareST-Rust
            
          # macOS aarch64
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: macos-latest-CloudflareST-Rust-aarch64
            asset_name: CloudflareST-Rust-macos-aarch64
            binary_path: target/aarch64-apple-darwin/release/CloudflareST-Rust
            
          # Windows x86_64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: windows-latest-CloudflareST-Rust
            asset_name: CloudflareST-Rust-windows-x86_64.exe
            binary_path: target/x86_64-pc-windows-msvc/release/CloudflareST-Rust.exe
            
          # Windows aarch64
          - os: windows-latest
            target: aarch64-pc-windows-msvc
            artifact_name: windows-latest-CloudflareST-Rust-aarch64
            asset_name: CloudflareST-Rust-windows-aarch64.exe
            binary_path: target/aarch64-pc-windows-msvc/release/CloudflareST-Rust.exe
      fail-fast: false

    steps:
      - name: 检出代码
        uses: actions/checkout@v2 # 检出仓库代码

      - name: 设置Rust环境
        uses: actions-rs/toolchain@v1 # 设置Rust工具链
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          profile: minimal
          override: true

      # 为Linux aarch64安装交叉编译依赖
      - name: 安装Linux aarch64交叉编译依赖
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu
          echo '[target.aarch64-unknown-linux-gnu]' >> ~/.cargo/config
          echo 'linker = "aarch64-linux-gnu-gcc"' >> ~/.cargo/config

      - name: 构建项目
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }}

      - name: 上传构建产物
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.artifact_name }}
          path: ${{ matrix.binary_path }}

  upload_to_repo:
    runs-on: ubuntu-latest
    needs: [validate_inputs, build]
    if: ${{ needs.validate_inputs.outputs.should_upload_to_repo == 'true' }}
    steps:
      - name: 检出代码
        uses: actions/checkout@v2

      # 下载Linux x86_64平台的构建产物
      - name: 下载构建产物 (Linux-x86_64)
        uses: actions/download-artifact@v2
        with:
          name: ubuntu-latest-CloudflareST-Rust
          path: binaries/Linux_AMD64/

      # 下载Linux aarch64平台的构建产物
      - name: 下载构建产物 (Linux-aarch64)
        uses: actions/download-artifact@v2
        with:
          name: ubuntu-latest-CloudflareST-Rust-aarch64
          path: binaries/Linux_ARM64/

      # 下载macOS x86_64平台的构建产物
      - name: 下载构建产物 (macOS-x86_64)
        uses: actions/download-artifact@v2
        with:
          name: macos-latest-CloudflareST-Rust
          path: binaries/MacOS_AMD64/

      # 下载macOS aarch64平台的构建产物
      - name: 下载构建产物 (macOS-aarch64)
        uses: actions/download-artifact@v2
        with:
          name: macos-latest-CloudflareST-Rust-aarch64
          path: binaries/MacOS_ARM64/

      # 下载Windows x86_64平台的构建产物
      - name: 下载构建产物 (Windows-x86_64)
        uses: actions/download-artifact@v2
        with:
          name: windows-latest-CloudflareST-Rust
          path: binaries/Windows_AMD64/

      # 下载Windows aarch64平台的构建产物
      - name: 下载构建产物 (Windows-aarch64)
        uses: actions/download-artifact@v2
        with:
          name: windows-latest-CloudflareST-Rust-aarch64
          path: binaries/Windows_ARM64/

      - name: 提交并推送二进制文件
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add binaries/
          git commit -m "Update binaries [skip ci]" || echo "No changes to commit"
          git push

  release:
    runs-on: ubuntu-latest # 定义作业运行在Ubuntu系统上
    needs: [validate_inputs, build, cleanup_releases]
    if: ${{ needs.validate_inputs.outputs.should_create_release == 'true' }}

    steps:
      - name: 检出代码
        uses: actions/checkout@v2 # 检出仓库代码

      # 下载所有构建产物
      - name: 下载所有构建产物
        uses: actions/download-artifact@v2
        with:
          path: artifacts/

      - name: 创建发布版本
        id: create_release
        uses: actions/create-release@v1 # 创建GitHub release
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }} # 使用GitHub令牌进行身份验证
        with:
          tag_name: ${{ format('v{0}', github.run_number) }} # 使用工作流运行编号自动生成标签名
          release_name: Release ${{ format('v{0}', github.run_number) }} # 使用工作流运行编号作为发布名称
          body: |
            Changes in this Release
            - First Change
            - Second Change # 发布说明
          draft: false # 是否为草稿
          prerelease: false # 是否为预发布

      # 上传Linux x86_64平台的构建产物到发布页面
      - name: 上传Linux x86_64构建产物
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/ubuntu-latest-CloudflareST-Rust/CloudflareST-Rust
          asset_name: CloudflareST-Rust-linux-x86_64
          asset_content_type: application/octet-stream
