name: 构建和发布

on:
  workflow_dispatch:  # 手动触发工作流
    inputs:
      upload_to_repo:
        description: '上传二进制文件到项目仓库'
        type: boolean
        default: false
      create_release:
        description: '创建发布版本'
        type: boolean
        default: true

jobs:
  validate_inputs:
    runs-on: ubuntu-latest
    steps:
      - name: 验证输入
        run: echo "验证输入完成"
    outputs:
      should_upload_to_repo: ${{ github.event.inputs.upload_to_repo == 'true' }}
      should_create_release: ${{ github.event.inputs.create_release == 'true' }}

  cleanup_releases:
    name: 清理旧版本发布
    needs: validate_inputs
    if: ${{ needs.validate_inputs.outputs.should_create_release == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: 删除旧版本
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const releases = await github.rest.repos.listReleases({
              owner,
              repo
            });
            
            for (const release of releases.data) {
              await github.rest.repos.deleteRelease({
                owner,
                repo,
                release_id: release.id
              });
              
              if (release.tag_name) {
                try {
                  await github.rest.git.deleteRef({
                    owner,
                    repo,
                    ref: `tags/${release.tag_name}`
                  });
                } catch (e) {
                  console.log(`Failed to delete tag ${release.tag_name}: ${e}`);
                }
              }
            }

  build:
    name: 构建 ${{ matrix.os }}_${{ matrix.arch }}
    needs: validate_inputs
    runs-on: ${{ matrix.runner }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: Windows
            runner: windows-latest
            arch: AMD64
            target: x86_64-pc-windows-msvc
            binary_name: CloudflareST-Rust.exe
          - os: Windows
            runner: windows-latest
            arch: ARM64
            target: aarch64-pc-windows-msvc
            binary_name: CloudflareST-Rust.exe
          - os: Linux
            runner: ubuntu-latest
            arch: AMD64
            target: x86_64-unknown-linux-gnu
            binary_name: CloudflareST-Rust
          - os: Linux
            runner: ubuntu-latest
            arch: ARM64
            target: aarch64-unknown-linux-gnu
            binary_name: CloudflareST-Rust
          - os: MacOS
            runner: macos-latest
            arch: AMD64
            target: x86_64-apple-darwin
            binary_name: CloudflareST-Rust
          - os: MacOS
            runner: macos-latest
            arch: ARM64
            target: aarch64-apple-darwin
            binary_name: CloudflareST-Rust

    steps:
      - name: 等待清理旧版本完成
        if: ${{ needs.validate_inputs.outputs.should_create_release == 'true' }}
        run: |
          echo "等待清理旧版本完成"
        shell: bash

      - name: 检出代码
        uses: actions/checkout@v4

      - name: 安装 Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: 构建
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }}
          
      - name: 创建二进制目录
        run: mkdir -p binaries/${{ matrix.os }}_${{ matrix.arch }}
        shell: bash

      - name: 复制二进制文件
        run: |
          if [ "${{ matrix.os }}" = "Windows" ]; then
            cp target/${{ matrix.target }}/release/CloudflareST-Rust.exe binaries/${{ matrix.os }}_${{ matrix.arch }}/
          else
            cp target/${{ matrix.target }}/release/CloudflareST-Rust binaries/${{ matrix.os }}_${{ matrix.arch }}/
          fi
        shell: bash

      - name: 上传构建产物
        uses: actions/upload-artifact@v4
        with:
          name: CloudflareST-Rust-${{ matrix.os }}_${{ matrix.arch }}
          path: binaries/${{ matrix.os }}_${{ matrix.arch }}/

  upload_to_repo:
    name: 上传二进制文件到仓库
    needs: [validate_inputs, build]
    if: ${{ needs.validate_inputs.outputs.should_upload_to_repo == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 下载所有构建产物
        uses: actions/download-artifact@v4
        with:
          path: binaries/

      - name: 准备二进制文件
        run: |
          mkdir -p binaries_combined
          cp -r binaries/*/* binaries_combined/
        shell: bash

      - name: 上传二进制文件到仓库
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "自动构建: 添加所有平台二进制文件"
          file_pattern: 'binaries_combined/*'

  create_release:
    name: 创建发布版本
    needs: [validate_inputs, build, cleanup_releases]
    if: ${{ needs.validate_inputs.outputs.should_create_release == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 下载所有构建产物
        uses: actions/download-artifact@v4
        with:
          path: artifacts/

      - name: 准备发布文件
        run: |
          mkdir -p release
          cp -r artifacts/*/* release/
        shell: bash

      - name: 创建发布版本
        uses: softprops/action-gh-release@v1
        with:
          name: "CloudflareST-Rust 最新版本"
          tag_name: "latest"
          files: release/*
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
